/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.dynamicrouter.control;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class DynamicRouterControlComponentConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    private org.apache.camel.component.dynamicrouter.control.DynamicRouterControlConfiguration getOrCreateConfiguration(DynamicRouterControlComponent target) {
        if (target.getConfiguration() == null) {
            target.setConfiguration(new org.apache.camel.component.dynamicrouter.control.DynamicRouterControlConfiguration());
        }
        return target.getConfiguration();
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        DynamicRouterControlComponent target = (DynamicRouterControlComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": target.setAutowiredEnabled(property(camelContext, boolean.class, value)); return true;
        case "configuration": target.setConfiguration(property(camelContext, org.apache.camel.component.dynamicrouter.control.DynamicRouterControlConfiguration.class, value)); return true;
        case "controlaction":
        case "controlAction": getOrCreateConfiguration(target).setControlAction(property(camelContext, java.lang.String.class, value)); return true;
        case "destinationuri":
        case "destinationUri": getOrCreateConfiguration(target).setDestinationUri(property(camelContext, java.lang.String.class, value)); return true;
        case "expressionlanguage":
        case "expressionLanguage": getOrCreateConfiguration(target).setExpressionLanguage(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "predicate": getOrCreateConfiguration(target).setPredicate(property(camelContext, java.lang.String.class, value)); return true;
        case "predicatebean":
        case "predicateBean": getOrCreateConfiguration(target).setPredicateBean(property(camelContext, org.apache.camel.Predicate.class, value)); return true;
        case "priority": getOrCreateConfiguration(target).setPriority(property(camelContext, java.lang.Integer.class, value)); return true;
        case "subscribechannel":
        case "subscribeChannel": getOrCreateConfiguration(target).setSubscribeChannel(property(camelContext, java.lang.String.class, value)); return true;
        case "subscriptionid":
        case "subscriptionId": getOrCreateConfiguration(target).setSubscriptionId(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": return boolean.class;
        case "configuration": return org.apache.camel.component.dynamicrouter.control.DynamicRouterControlConfiguration.class;
        case "controlaction":
        case "controlAction": return java.lang.String.class;
        case "destinationuri":
        case "destinationUri": return java.lang.String.class;
        case "expressionlanguage":
        case "expressionLanguage": return java.lang.String.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "predicate": return java.lang.String.class;
        case "predicatebean":
        case "predicateBean": return org.apache.camel.Predicate.class;
        case "priority": return java.lang.Integer.class;
        case "subscribechannel":
        case "subscribeChannel": return java.lang.String.class;
        case "subscriptionid":
        case "subscriptionId": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        DynamicRouterControlComponent target = (DynamicRouterControlComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": return target.isAutowiredEnabled();
        case "configuration": return target.getConfiguration();
        case "controlaction":
        case "controlAction": return getOrCreateConfiguration(target).getControlAction();
        case "destinationuri":
        case "destinationUri": return getOrCreateConfiguration(target).getDestinationUri();
        case "expressionlanguage":
        case "expressionLanguage": return getOrCreateConfiguration(target).getExpressionLanguage();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "predicate": return getOrCreateConfiguration(target).getPredicate();
        case "predicatebean":
        case "predicateBean": return getOrCreateConfiguration(target).getPredicateBean();
        case "priority": return getOrCreateConfiguration(target).getPriority();
        case "subscribechannel":
        case "subscribeChannel": return getOrCreateConfiguration(target).getSubscribeChannel();
        case "subscriptionid":
        case "subscriptionId": return getOrCreateConfiguration(target).getSubscriptionId();
        default: return null;
        }
    }
}

